openapi: 3.0.3
info:
  title: СОА Лабораторная №1
  description: Документация для набора веб-сервисов в рамках лабораторной №1
  version: 0.0.2
paths:
  /movie:
    post:
      tags: [Базовые операции веб-сервиса №1]
      summary: Создать объект 
      description: |
        **Требования для объекта Movie**
  
        - name: Поле не может быть null, Строка не может быть пустой
        - coordinates: Поле не может быть null ( x - integer, y - float)
        - oscarsCount: Значение поля должно быть больше 0, Поле может быть null
        - genre: Поле может быть null
        - mpaaRating: Поле может быть null
        - directorName: Поле не может быть null
        
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
              
      responses:
        204:
          description: Объект успешно добавлен
        422:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "field": "name",
                        "inner_message": "Это поле обязательно для заполнения"},
                      {
                        "field": "oscarsCount",
                        "inner_message": "Это поле должно быть больше 0, поле может быть null"
                      }
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
        500:
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Запрос не удалось обработать"}
                      ]
                    }
                
  /movies/{id}:
    get:
      tags: [Базовые операции веб-сервиса №1]
      summary: Получить объект по id
      description: |
        **Введите id фильма**
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: id
            example: 1
      responses:
        200:
          description: Информация об объекте получена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieObjectResponse"
        404:
          description: Объект не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Такого ID не существует"}
                      ]
                    }
        422:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "ID введен неверно"}
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
        500:
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Запрос не удалось обработать"}
                      ]
                    }
    delete:
      tags: [Базовые операции веб-сервиса №1]
      summary: Удалить объект по id
      description: |
        **Введите id фильма**
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: id
            example: 1
      responses:
        204:
          description: Объект успешно удалён
        404:
          description: Объект не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Такого ID не существует"}
                      ]
                    }
        422:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "ID введен неверно"}
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
        500:
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Запрос не удалось обработать"}
                      ]
                    }
                    
    patch:
      tags: [Базовые операции веб-сервиса №1]
      summary: Обновить объект по id
      description: |
        **Введите id фильма**
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: id
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Movie"
      responses:
        204:
          description: Объект успешно обновлён
        404:
            description: Объект не найден
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
                examples:
                  response:
                    value: |-
                      {
                        "message": [
                        {
                          "inner_message": "Такого ID не существует"}
                        ]
                      }
        422:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "ID введен неверно"}
                      ]
                    }
        429:
            description: Слишком много запросов
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
                examples:
                  response:
                    value: |-
                      {
                        "message": [
                        {
                          "inner_message": "Вы превысили лимит запросов"}
                        ]
                      } 
        500:
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Запрос не удалось обработать"}
                      ]
                    }

  /movies:
    get:
      tags: [Базовые операции веб-сервиса №1]
      summary: Получить страницу фильмов 
      parameters:
        - name: sort
          description: Поля сортировки. Без ("-") фильтрация по убыванию, с ("-") фильтрация по возрастанию. Если одно и то же поле выбрано в обоих вариантах, будет вывдена ошибка
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              default: id
              enum:
                - id
                - name
                - creationDate
                - coordinates.x
                - coordinates.y
                - oscarCount
                - genre
                - mpaaRating
                - director.name
                - director.weight
                - director.passportID
                - director.height
                - director.location.name
                - director.location.x
                - director.location.y
                - -id
                - -name
                - -creationDate
                - -coordinates.x
                - -coordinates.y
                - -oscarCount
                - -genre
                - -mpaaRating
                - -director.name
                - -director.weight
                - -director.passportID
                - -director.height
                - -director.location.name
                - -director.location.x
                - -director.location.y
        - name: filter
          in: query
          description: Поля фильтрации. Выбирается поле, один из оперторов сравнения( "eq", "ne", "gt", "lt", "lte", "gte") и значение, по которому будет происходить сравнение.
          required: false
          schema:
            type: array
            items:
              type: string
              example: id[eq]=1
              pattern: '^(id|name|creationDate|coordinates\.x|coordinates\.y|oscarCount|genre|mpaaRating|director\.name|director\.weight|director\.height|director\.passportID|director\.location\.name|director\.location\.x|director\.location\.y)\[(eq|ne|gt|lt|lte|gte)\]=[^&]+$'
          style: deepObject
        - name: page
          in: query
          required: true
          description: Номер страницы, по дефолту используется первая. 0 - если нужны все страницы
          schema:
            type: integer
            default: 1
            minimum: 0
        - name: pageSize
          in: query
          required: true
          description: Ограничение записей на страницу. Если записей на странице меньше заданного числа, будут выведены все 
          schema:
            type: integer
            default: 10
            minimum: 1

      responses:
        200:
          description: Информация об объекте получена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieSortedFiteredRespones"
        422:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "field": "id",
                        "inner_message": "Это поле принимает только целочисленные знаечния"},
                      {
                        "field": "oscarsCount",
                        "inner_message": "Это поле должно быть больше 0, поле может быть null"
                      }
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
        500:
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Запрос не удалось обработать"}
                      ]
                    }                    
  /mpaaRatings:
      get:
        tags: [Базовые операции веб-сервиса №1]
        summary: Получить список mpaaRating 
        responses:
          200:
            description: Запрос успешно обработан
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/MpaaRating"
                examples:
                  response:
                    value:
                      - PG_13
                      - R
                      - NC_17
          429:
            description: Слишком много запросов
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
                examples:
                  response:
                    value: |-
                      {
                        "message": [
                        {
                          "inner_message": "Вы превысили лимит запросов"}
                        ]
                      }
          500:
            description: Внутренняя ошибка сервера
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
                examples:
                  response:
                    value: |-
                      {
                        "message": [
                        {
                          "inner_message": "Запрос не удалось обработать"}
                        ]
                      }
  /movieGenres:
    get:
      tags: [Базовые операции веб-сервиса №1]
      summary: Получить список movieGenre
      responses:
          200:
            description: Запрос успешно обработан
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/MovieGenre"
                examples:
                  response:
                    value:
                      - ACTION
                      - ADVENTURE
                      - SCIENCE_FICTION
          429:
            description: Слишком много запросов
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
                examples:
                  response:
                    value: |-
                      {
                        "message": [
                        {
                          "inner_message": "Вы превысили лимит запросов"}
                        ]
                      }
          500:
            description: Внутренняя ошибка сервера
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Error"
                examples:
                  response:
                    value: |-
                      {
                        "message": [
                        {
                          "inner_message": "Запрос не удалось обработать"}
                        ]
                      }
  
      
        
  /movies/count:
    get:
      tags: [Дополнительные операции веб-сервиса №1]
      summary: Вернуть количество объектов, значение поля mpaaRating которых меньше заданного.
      description: |
        **Выберите значение**
      parameters:
        - name: mpaaRating
          in: query
          required: true
          description: Значение MPAA рейтинга для фильтрации (например, "PG_13")
          schema:
            type: string
            enum: [PG_13, R, NC_17]
            example: "R"
      responses:
        200:
          description: Успешный ответ с количеством фильмов
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 5 
        422:
          description: Объект не соответсвует требованиям. Данные введены не верно
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "field": "mpaaRating",
                        "inner_message": "Вы должны выбрать значение из списка"
                      }
                      ]
                    }
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
        500:
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Запрос не удалось обработать"}
                      ]
                    }
                    

components:
  schemas:
  
    Movie:
      type: object
      required: 
        - name
        - coordinates  
        - directorID
      properties:
        name: 
          type: string
          example: Dune
          nullable: false
        coordinates:
          $ref: "#/components/schemas/Coordinates"
        oscarCount:
          type: integer
          example: 1
          nullable: true
        genre:
          $ref: "#/components/schemas/MovieGenre"
        mpaaRating:
          $ref: "#/components/schemas/MpaaRating"
        directorName:
          type: string
          example: Sergei Balabanov
          nullable: false
          
          
    Coordinates:
      type: object
      required:
        - y
      properties:
        x:
          type: integer
          example: 100
          nullable: true
        y:
          type: number
          format: float
          example: -100.1
          nullable: false
          
    Person:
      type: object
      required:
        - name
        - weight
        - passportID
      properties:
        name:
          type: string
          example: Sergei Balabanov
          nullable: false
        height:
          type: number
          format: double
          example: 180.0
          nullable: true
        weight:
          type: number
          format: double
          example: 100.0
          nullable: false
        passportID:
          type: string
          example: 2024 123456
          nullable: true
        location:
          $ref: "#/components/schemas/Location"
          
    
    Location:
      type: object
      required:
        - y
      properties:
        x:
          type: number
          format: float
          example: 100.1
          nullable: true
        y: 
          type: number
          format: float
          example: 100.1
        name:
          type: string
          example: ITMO University
          nullable: true
    
    MovieGenre:
      type: string
      enum:
        - ACTION
        - ADVENTURE
        - SCIENCE_FICTION
    
    MpaaRating:
      type: string
      enum: 
        - PG_13
        - R
        - NC_17
    
    MovieObjectResponse:
      type: object
      required:
        - id
        - name
        - coordinates
        - creationDate
        - oscarCount
        - genre
        - mpaaRating
        - director
      properties:
        id: 
          type: integer
          format: int64
          example: 1
          nullable: false
        name: 
          type: string
          example: Dune
          nullable: false
        coordinates:
          $ref: "#/components/schemas/Coordinates"
        creationDate:
          type: string
          nullable: false
          format: date-time
        oscarCount:
          type: integer
          example: 1
          nullable: true
        genre:
          $ref: "#/components/schemas/MovieGenre"
        mpaaRating:
          $ref: "#/components/schemas/MpaaRating"
        director:
          $ref: "#/components/schemas/Person"
    
    
    MovieSortedFiteredRespones:
      type: object
      properties:
          Objects:
            type: array
            items:
              $ref: "#/components/schemas/MovieObjectResponse"
          PageInfo:
            type: array
            items:
              $ref: "#/components/schemas/ExtraPages"
          
      
      
      
    
    ExtraPages:
      required: 
        - page
        - pageSize
        - totalPages
        - totalCount
      type: object
      properties:
        page:
          type: number
          example: 1
          nullable: false
        pageSize:
          type: number
          example: 10
          nullable: false
        totalPages:
          type: number
          example: 2
          nullable: false
        totalCount:
          type: number
          example: 20
          nullable: false
          
          
        
      
    
    Error:
      required:
        - message
      properties:
        message:
          nullable: false
          type: array
          items:
            type: object
            required:
            - inner_message
            properties:
              field:
                type: string
              inner_message:
                type: string

          
    
          
      
          
      
        
          
        
    
      
          
