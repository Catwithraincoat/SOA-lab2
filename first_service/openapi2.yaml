openapi: 3.0.3
info:
  title: СОА Лабораторная №1
  description: Документация для набора веб-сервисов в рамках лабораторной №1
  version: 0.0.1
paths:
  /oscar/movies/get-loosers:
    get:
      tags: [Операции веб-сервиса №2]
      summary: получить список фильмов, не имеющих ни одного "Оскара"
      responses:
        200:
          description: Список фильмов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieSortedFiteredRespones"
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
        500:
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Запрос не удалось обработать"}
                      ]
                    }
        503:
          description: Сервис временно не доступен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Попробуйте повторить запрос позже"}
                      ]
                    }

  /oscar/directors/get-loosers:
    get:
      tags: [Операции веб-сервиса №2]
      summary: получить список режиссёров, ни один фильм которых не получил ни одного "Оскара"
      responses:
        200:
          description: Список режиссеров
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectorsArray"
        429:
          description: Слишком много запросов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Вы превысили лимит запросов"}
                      ]
                    }
        500:
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Запрос не удалось обработать"}
                      ]
                    }
        503:
          description: Сервис временно не доступен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                response:
                  value: |-
                    {
                      "message": [
                      {
                        "inner_message": "Попробуйте повторить запрос позже"}
                      ]
                    }






      
components:
  schemas:
          
          
    Coordinates:
      type: object
      required:
        - y
      properties:
        x:
          type: integer
          example: 100
          nullable: true
        y:
          type: number
          format: float
          example: -100.1
          nullable: false
          
    Person:
      type: object
      required:
        - name
        - weight
        - passportID
      properties:
        name:
          type: string
          example: Sergei Balabanov
          nullable: false
        height:
          type: number
          format: double
          example: 180.0
          nullable: true
        weight:
          type: number
          format: double
          example: 100.0
          nullable: false
        passportID:
          type: string
          example: 2024 123456
          nullable: true
        location:
          $ref: "#/components/schemas/Location"
          
    
    Location:
      type: object
      required:
        - y
      properties:
        x:
          type: number
          format: float
          example: 100.1
          nullable: true
        y: 
          type: number
          format: float
          example: 100.1
        name:
          type: string
          example: ITMO University
          nullable: true
    
    MovieGenre:
      type: string
      enum:
        - ACTION
        - ADVENTURE
        - SCIENCE_FICTION
    
    MpaaRating:
      type: string
      enum: 
        - PG_13
        - R
        - NC_17
    
    MovieObjectResponse:
      type: object
      required:
        - id
        - name
        - coordinates
        - creationDate
        - oscarCount
        - genre
        - mpaaRating
        - director
      properties:
        id: 
          type: integer
          format: int64
          example: 1
          nullable: false
        name: 
          type: string
          example: Dune
          nullable: false
        coordinates:
          $ref: "#/components/schemas/Coordinates"
        creationDate:
          type: string
          nullable: false
          format: date-time
        oscarCount:
          type: integer
          example: 1
          nullable: true
        genre:
          $ref: "#/components/schemas/MovieGenre"
        mpaaRating:
          $ref: "#/components/schemas/MpaaRating"
        director:
          $ref: "#/components/schemas/Person"
    
    
    MovieSortedFiteredRespones:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/MovieObjectResponse"
      
    DirectorsArray:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            required:
            - directorName
            properties:
              directorName:
                type: string
                example: "Sergei Balabanov"
      
    
    
    
    Error:
      required:
        - message
      properties:
        message:
          nullable: false
          type: array
          items:
            type: object
            required:
            - inner_message
            properties:
              field:
                type: string
              inner_message:
                type: string
                

          
    
          
      
          
      
        
          
        
    
      

          